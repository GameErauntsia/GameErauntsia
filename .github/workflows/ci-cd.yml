name: CI/CD

on:
  push:
    paths-ignore:
      - "README.md"
      - "CONTRIBUTING.md"
      - "CHANGELOG.md"
      - "LICENSE"
      - ".gitignore"
jobs:
  ci-cd:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_NAME: ${{vars.DOCKER_IMAGE_NAME}}
      COVERALLS_REPO_TOKEN: ${{secrets.COVERALLS_REPO_TOKEN}}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build dev/ci Docker image
        run: |
          docker build \
          --tag ${DOCKER_IMAGE_NAME}:dev \
          --target development .

      - name: Start environment
        run: docker-compose up -d

      - name: Run black check
        run: docker-compose exec -T --user gamerauntsia web python -m black --check .

      - name: Run tests
        run: |
          docker-compose exec -T --user gamerauntsia \
          -e TESTING=True -e COVERAGE_FILE=/tmp/.coveragerc \
          web \
          python -m coverage run runtests.py

      - name: Publish test coverage
        run: |
          docker-compose exec -T --user gamerauntsia -e COVERALLS_REPO_TOKEN web \
          python -m coveralls --service=github --rcfile=/tmp/.coveragerc

      - name: Stop environment
        run: docker-compose down -t0

      - name: Build production Docker image
        run: |
          docker build \
          --tag ${DOCKER_IMAGE_NAME}:latest \
          --target production .

      - name: Publish production latest Docker image
        if: github.ref == 'refs/heads/main'
        run: docker push ${DOCKER_IMAGE_NAME}:latest

      - name: Publish production versioned Docker image
        if: github.ref == 'refs/heads/main'
        run: |
          VERSION=$(date '+%Y-%m-%d__%H-%M-%S')
          VERSIONED_NAME=${DOCKER_IMAGE_NAME}:${VERSION}
          docker tag ${DOCKER_IMAGE_NAME}:latest ${VERSIONED_NAME}
          docker push ${VERSIONED_NAME}
